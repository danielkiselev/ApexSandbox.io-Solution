public static Integer longestDistinctSubstring(String str, Integer k){ 

        Integer max=0;
        Integer wstart=0;
        Integer len=str.length();
        Map<String,Integer> map1 = new Map<String,Integer>();
        for(Integer wend=0;wend<len;wend++){
            String endC = str.charAt(wend);
            Integer tempValue = 1;
            if(map1.containsKey(endC)){
                tempValue += map1.get(endC);
            }
            map1.put(endC,tempValue);
            while(map1.size()>k){
                String startC = str.charAt(wstart);
                if(map1.containsKey(startC)){
                    Integer temp = map1.get(startC);
                    map1.put(startC,temp-1);
                if(map1.get(startC)==0){
                    map1.remove(startC);
                }
                }
                wstart=wstart+1;
            }
            if(map1.size()<=k)
              max=Math.max(max,(wend-wstart+1));
        }
        return max;
}